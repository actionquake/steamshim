name: cmake build

on:
  workflow_dispatch:

jobs:
  mingw:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up MinGW
        uses: egor-tensin/setup-mingw@v2
        with:
          platform: x64

      - name: Unzip steamworks file
        run: unzip steamworks_sdk_156.zip

      - name: Build
        run: cmake .

      - name: Rename and binaries as executable
        run: |
          mv steamshim/steamshim.exe aqtion.exe

      - name: Generate Win Mingw archives
        uses: actions/upload-artifact@v3
        with:
          name: aqtion-win64-x86_64
          path: aqtion.exe

  # windows:
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Add msbuild to PATH
  #       uses: microsoft/setup-msbuild@v1.1

  #     - name: Build
  #       run: msbuild steamshim.vcxproj /p:configuration=release

  #     - name: Generate archive
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: "aqtion-win-x86_64"
  #         path: aqtion.exe

  linux64:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - name: Unzip steamworks file
        run: unzip steamworks_sdk_156.zip

      - name: Build
        run: cmake .

      - name: Rename and binaries as executable
        run: |
          mv steamshim/steamshim aqtion
          chmod +x aqtion
          
      - name: Generate Linux x64 archives
        uses: actions/upload-artifact@v3
        with:
          name: aqtion-lin-x86_64
          path: aqtion

  # Do ARM build at some point
  # linuxARM64:
  #   runs-on: [self-hosted, ARM64]
  #   strategy:
  #     matrix:
  #       cc: [gcc]
  #   steps:
  #     - uses: actions/checkout@v2

      # - name: Install dependencies
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y meson libsdl2-dev libopenal-dev \
      #     libpng-dev libjpeg-dev zlib1g-dev mesa-common-dev \
      #     libcurl4-gnutls-dev libx11-dev libxi-dev \
      #     libwayland-dev wayland-protocols libdecor-0-dev patchelf \
      #     libogg-dev libvorbis-dev

      # - name: Build
      #   run: |
      #     meson setup ${{ env.MESON_ARGS }} ${{ env.MESON_ARGS_LINUX }} builddir
      #     meson compile -vC builddir
      #   env:
      #     CC: ${{ matrix.cc }}

      # - name: Set binaries as executable
      #   run: |
      #     chmod +x builddir/q2pro*

      # - name: Generate Linux ARM archives
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: q2pro-lin-arm64
      #     path: |
      #       builddir/q2pro
      #       builddir/q2proded
      #       builddir/gamearm.so

  darwin:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2

      - name: Unzip steamworks file
        run: unzip steamworks_sdk_156.zip

      - name: Build
        run: cmake .
        env:
          steamworks: "sdk"

      - name: Rename and binaries as executable
        run: |
          mv steamshim/steamshim aqtion
          chmod +x aqtion

      - name: Generate Mac archives
        uses: actions/upload-artifact@v3
        with:
          name: aqtion-darwin-x86_64
          path: aqtion

  # Github does not support Apple Silicon yet
  # macARM64:
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Setup Homebrew for ARM64 and dependencies
  #       run: |
  #         arch -arm64 brew install meson libpng jpeg sdl2 openal-soft zlib curl libvorbis

  #     - name: Build
  #       run: |
  #         meson setup ${{ env.MESON_ARGS }} builddir
  #         ninja -vC builddir
  #       env:
  #         CC: "gcc"
  #         PKG_CONFIG_PATH: "/opt/homebrew/Cellar/openal-soft/1.22.2/lib/pkgconfig/:/opt/homebrew/Cellar/jpeg/9e/lib/pkgconfig/"
  #         CFLAGS: "-target arm64-apple-macos11"

  #     - name: Set binaries as executable
  #       run: |
  #         chmod +x builddir/q2pro*

  #     - name: Generate Mac archives
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: q2pro-mac-arm64
  #         path: |
  #           builddir/q2pro
  #           builddir/q2proded